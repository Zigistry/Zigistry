import programs from "../../../../../../database/database/programs.json";
import type { Repo } from "@types";
$ const repoPromise: Promise<Repo> = new Promise(async (resolve, reject) => {
  const { repo_from, user_name, repo_name } = $global.params;
  const repoPath = `${user_name}/${repo_name}`;
  let repository;
  if (repo_from === "github") {
    // GitHub repos (no repo_from attribute)
    repository = programs.find(
      (repo) => repo.full_name === repoPath && repo.repo_from === "github",
    );
  } else if (repo_from === "gitlab") {
    // GitLab repos
    repository = programs.find(
      (repo) => repo.full_name === repoPath && repo.repo_from === "gitlab",
    );
  } else if (repo_from === "codeberg") {
    // Codeberg repos
    repository = programs.find(
      (repo) => repo.full_name === repoPath && repo.repo_from === "codeberg",
    );
  } else {
    return reject("Error: Invalid repo_from value");
  }
  if (!repository) {
    return reject("/404");
  }
  resolve(repository);
});

await(repoPromise) client-reorder timeout=100000000
  @placeholder
    div.flex.items-center.justify-center.min-h-screen
      div.animate-pulse.text-xl -- Loading...

  @then|repo|
    div class="min-h-screen p-2 sm:p-4 md:p-6 lg:p-8"
      custom_card [
        section="special-program"
        repo_from=repo.repo_from
        avatar_url=repo.avatar_url
        description=repo.description
        name=repo.name
        stargazers_count=repo.stargazers_count
        forks_count=repo.forks_count
        open_issues=repo.open_issues
        fork=repo.fork
        full_name=repo.full_name
        has_build_zig=repo.has_build_zig
        has_build_zig_zon=repo.has_build_zig_zon
        license=repo.license
        watchers_count=repo.watchers_count
        topics=repo.topics
        no-update
      ]

      div class="mt-4 sm:mt-8 space-y-4 sm:space-y-8"
        <!-- Dependencies Section -->
        if (repo.dependencies?.length)
          div class="bg-white dark:bg-slate-800 rounded-lg sm:rounded-xl p-3 sm:p-6 shadow-lg sm:shadow-xl"
            h2 class="text-xl sm:text-2xl font-bold mb-3 sm:mb-4 text-gray-900 dark:text-white border-b border-gray-300 dark:border-slate-600 pb-2"
              -- Dependencies
            div class="grid gap-3 sm:gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3"
              for|dep| of=repo.dependencies
                if (dep)
                  div class="bg-gray-100 dark:bg-slate-700 rounded-lg p-3 sm:p-4 hover:bg-gray-200 dark:hover:bg-slate-600 transition-all duration-300 transform hover:scale-102"
                    div class="space-y-2 sm:space-y-3"
                      div class="flex items-center space-x-2 text-sm sm:text-base"
                        span class="text-emerald-600 dark:text-emerald-400 font-medium" -- Name
                        span class="text-gray-900 dark:text-white"
                          -- ${dep.type !== "remote" ? "./" : ""}${dep.name}
                      div.space-y-1
                        div class="text-sky-600 dark:text-sky-400 font-medium text-sm sm:text-base"
                          -- URL
                        a [
                          href=dep.url
                          target="_blank"
                          class="text-gray-800 dark:text-white hover:text-sky-700 dark:hover:text-sky-300 text-xs sm:text-sm break-all"
                        ] -- ${dep.url}
                      div.space-y-1
                        div class="text-purple-600 dark:text-purple-400 font-medium text-sm sm:text-base"
                          -- Tag URL
                        a [
                          href=dep.tar_url
                          target="_blank"
                          class="text-gray-800 dark:text-white hover:text-purple-700 dark:hover:text-purple-300 text-xs sm:text-sm break-all"
                        ] -- ${dep.tar_url}
                      div.flex.items-center.space-x-2
                        span class="text-amber-600 dark:text-amber-400 font-medium text-sm sm:text-base"
                          -- Commit
                        code class="relative truncate bg-gray-200 dark:bg-slate-800 px-2 py-1 rounded text-xs sm:text-sm font-mono text-gray-800 dark:text-white hover:whitespace-normal hover:overflow-visible hover:z-10 hover:absolute hover:shadow-lg"
                          -- ${dep.commit}

        <!-- Dependents Section -->
        if (repo.dependents?.length)
          div class="bg-white dark:bg-slate-800 rounded-lg sm:rounded-xl p-3 sm:p-6 shadow-lg sm:shadow-xl"
            h2 class="text-xl sm:text-2xl font-bold mb-3 sm:mb-4 text-gray-900 dark:text-white border-b border-gray-300 dark:border-slate-600 pb-2"
              -- Dependents
            div class="grid gap-3 sm:gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3"
              for|url| of=repo.dependents
                div class="bg-gray-100 dark:bg-slate-700 rounded-lg p-3 sm:p-4 hover:bg-gray-200 dark:hover:bg-slate-600 transition-all duration-300 transform hover:scale-102"
                  a [
                    href=url
                    class="text-gray-800 dark:text-white hover:text-sky-700 dark:hover:text-sky-300 text-sm sm:text-base break-all"
                    target="_blank"
                  ] -- ${url}

        <!-- README Section -->
        if (repo.readme_content)
          div class="bg-white dark:bg-slate-800 rounded-lg sm:rounded-xl p-3 sm:p-6 shadow-lg sm:shadow-xl"
            h2 class="text-xl sm:text-2xl font-bold mb-3 sm:mb-4 text-gray-900 dark:text-white border-b border-gray-300 dark:border-slate-600 pb-2"
              -- README
            div class="prose dark:prose-invert max-w-none readmeDiv prose-sm sm:prose-base"
              -- $!{repo.readme_content}


  @catch|_|
    h1 class="text-3xl sm:text-4xl text-center text-red-500" -- 404!

script type="module"
  --
  import { highlightElements as e } from "https://cdn.jsdelivr.net/npm/zilite@0.0.25";
  import { zig as n } from "https://cdn.jsdelivr.net/npm/zilite@0.0.25/src/language/zig.js";
  import { bash as i } from "https://cdn.jsdelivr.net/npm/zilite@0.0.25/src/language/bash.js";
  import { diff as t } from "https://cdn.jsdelivr.net/npm/zilite@0.0.25/src/language/diff.js";
  e(n, "language-zig");
  e(i, "language-bash");
  e(i, "language-console");
  e(i, "language-sh");
  e(t, "language-diff");
  --

style {
  @import url("https://cdn.jsdelivr.net/npm/zilite@0.0.25/src/styles/darkMode.css");

  :root {
    --content-width: 100%;
    --max-content-width: 1400px;
  }

  .readmeDiv {
    img {
      max-width: 100%;
      height: auto;
      border-radius: 0.375rem;
    }

    pre {
      overflow-x: auto;
      padding: 0.75rem;
      margin: 0.5rem 0;
      border-radius: 0.375rem;
      font-size: 0.875rem;
      line-height: 1.5;
      -webkit-overflow-scrolling: touch;
    }
    
    ul {
      list-style-type: disc;
      padding-left: 1.5em;
    }

    ol {
      list-style-type: decimal;
      padding-left: 1.5em;
    }
  }

  .prose-sm {
    font-size: 0.875rem;

    code {
      font-size: 0.75rem;
    }

    pre {
      font-size: 0.75rem;
    }
  }

  @media (max-width: 640px) {
    .p-2 {
      padding: 0.5rem;
    }

    .space-y-2 > * + * {
      margin-top: 0.5rem;
    }

    .break-all {
      word-break: break-all;
    }
  }
}
