import programs from "../../../database/database/progams_details.json";
import type { Repo } from "@types";
class {
  declare state: {
    searchDdosQuery: string;
    searchResults: Repo[];
    intelegentSortData: Repo[];
    showSearchResults: boolean;
    isSidebarOpen: boolean;
  };

  onCreate() {
    this.state = {
      searchDdosQuery: "",
      searchResults: [],
      showSearchResults: false,
      intelegentSortData: [],
      isSidebarOpen: false,
    };
  }

  onMount() {
    const my_element = document.getElementById(
      "dropDownID",
    ) as HTMLSelectElement;
    const my_element2 = document.getElementById(
      "search_box",
    ) as HTMLInputElement;

    my_element.addEventListener("change", (event) => {
      const selectedValue = my_element.value;
      if (selectedValue === "No Filter") {
        this.state.showSearchResults = false;
        return;
      }
      fetch(
        `https://zigistry-api.hf.space/api/searchPrograms?q=${my_element2.value}&filter=${selectedValue}`,
      )
        .then((x) => {
          return x.json();
        })
        .then((y: Repo[]) => {
          this.state.searchResults = y;
          this.state.intelegentSortData = [...y];
          this.state.showSearchResults = true;
        });
    });
  }

  toggleSidebar() {
    this.state.isSidebarOpen = !this.state.isSidebarOpen;
  }

  onSort(name: string) {
    let sortedResults = [...this.state.searchResults];

    switch (name) {
      case "intelligent_sort":
        if (this.state.intelegentSortData.length > 0) {
          sortedResults = [...this.state.intelegentSortData];
        } else {
          console.warn("Intelligent sort data is empty.");
          return;
        }
        break;
      case "star_count_sort":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) => b.stargazers_count - a.stargazers_count,
        );
        break;
      case "last_updated":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) =>
            new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime(),
        );
        break;
      case "a_to_z":
        sortedResults = sortedResults.sort((a: Repo, b: Repo) =>
          a.name.localeCompare(b.name),
        );
        break;
      case "z_to_a":
        sortedResults = sortedResults.sort((a: Repo, b: Repo) =>
          b.name.localeCompare(a.name),
        );
        break;
      case "fork_sort":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) => b.forks_count - a.forks_count,
        );
        break;
      case "most_issues":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) => b.open_issues - a.open_issues,
        );
        break;
      case "least_issues":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) => a.open_issues - b.open_issues,
        );
        break;
      case "recently_created":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) =>
            new Date(b.created_at).getTime() - new Date(a.created_at).getTime(),
        );
        break;
      case "oldest_first":
        sortedResults = sortedResults.sort(
          (a: Repo, b: Repo) =>
            new Date(a.created_at).getTime() - new Date(b.created_at).getTime(),
        );
        break;
    }

    this.state.searchResults = sortedResults;
  }

  onSearch() {
    const ele = document.getElementById("search_box") as HTMLInputElement;
    const value = ele.value;
    if (value === this.state.searchDdosQuery || value === "") return;
    this.state.searchDdosQuery = value;
    fetch(`https://zigistry-api.hf.space/api/searchPrograms?q=${value}`)
      .then((x) => {
        return x.json();
      })
      .then((y: Repo[]) => {
        this.state.searchResults = y;
        this.state.intelegentSortData = [...y];
        this.state.showSearchResults = true;
      });
  }

  onKeyUp(event: KeyboardEvent) {
    if (event.key === "Enter") {
      this.onSearch();
    }
    const ele = document.getElementById("search_box") as HTMLInputElement;
    const value = ele.value;
    if (value === "") {
      this.state.showSearchResults = false;
      this.state.searchDdosQuery = "";
    }
  }
}

div
  div.flex.flex-col.items-center
    div class="rounded-lg sm:m-5 sm:p-5 sm:shadow-lg sm:shadow-black"
      h1.my-5.text-center.text-2xl.font-semibold -- Search Ziglang Programs
      div.flex
        div.w-fit data-testid="flowbite-tooltip-target"
          div.ml-4.flex
            div.relative.w-max.min-w-10.max-w-36
              select#dropDownID class="block w-full rounded-lg border border-yellow-500 bg-yellow-50 p-2.5 text-sm text-yellow-900 placeholder-yellow-700 focus:border-yellow-500 focus:ring-yellow-500 disabled:cursor-not-allowed disabled:opacity-50 dark:border-yellow-400 dark:bg-yellow-100 dark:focus:border-yellow-500 dark:focus:ring-yellow-500"
                option -- No Filter
                option -- api
                option -- http
                option -- rest
                option -- gamedev
                option -- gui
                option -- cross-platform

        div.mx-4.mb-5.flex.w-60.max-w-72
          div.relative.w-full
            input#search_box [
              class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-cyan-500 focus:ring-cyan-500 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-cyan-500 dark:focus:ring-cyan-500"
              type="text"
              placeholder="Search 2000+ Zig programs"
              autofocus
              on-keyup("onKeyUp")
            ]

if(!state.showSearchResults)
  div
    h1 class=[
      "my-5",
      "ml-10",
      "flex",
      "w-fit",
      "items-center",
      "rounded",
      "border-2",
      "border-slate-400",
      "px-4",
      `pt-[18px]`,
      "pb-4",
      "text-left",
      "text-2xl",
      "font-semibold",
      "shadow-lg",
      "shadow-black",
    ]
      div class="flex translate-y-[-5px] items-center gap-3"
        div.relative.flex.w-8
          flowbite-play-outline [
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 25 25"
            height="25"
            width="25"
            class="absolute left-0 z-10 -translate-y-[6px]"
          ]
          flowbite-play-outline [
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 25 25"
            height="25"
            width="25"
            class="absolute left-3 -translate-y-[6px]"
          ]
      span -- &nbsp;Recently released:

    section.flex.w-full.flex-wrap.justify-evenly
      for|Card_Details| of=programs.top10latestrepos
        custom_card [
          section="programs"
          repo_from=Card_Details.repo_from
          avatar_url=Card_Details.avatar_url
          description=Card_Details.description
          name=Card_Details.name
          stargazers_count=Card_Details.stargazers_count
          forks_count=Card_Details.forks_count
          open_issues=Card_Details.open_issues
          fork=Card_Details.fork
          full_name=Card_Details.full_name
          has_build_zig=Card_Details.has_build_zig
          has_build_zig_zon=Card_Details.has_build_zig_zon
          license=Card_Details.license
          watchers_count=Card_Details.watchers_count
          topics=Card_Details.topics
          no-update
        ]

    h1.my-5.ml-10.flex.w-fit.items-center.rounded.border-2.border-slate-400.p-4.text-left.text-2xl.font-semibold.shadow-lg.shadow-black
      flowbite-star-solid [
        stroke="currentColor"
        fill="currentColor"
        stroke-width="0"
        viewBox="0 0 25 25"
        height="25"
        width="25"
      ]
      -- &nbsp;Most used:

    section.flex.w-full.flex-wrap.justify-evenly
      for|Card_Details| of=programs.mostused
        custom_card [
          section="programs"
          repo_from=Card_Details.repo_from
          avatar_url=Card_Details.avatar_url
          description=Card_Details.description
          name=Card_Details.name
          stargazers_count=Card_Details.stargazers_count
          forks_count=Card_Details.forks_count
          open_issues=Card_Details.open_issues
          fork=Card_Details.fork
          full_name=Card_Details.full_name
          has_build_zig=Card_Details.has_build_zig
          has_build_zig_zon=Card_Details.has_build_zig_zon
          license=Card_Details.license
          watchers_count=Card_Details.watchers_count
          topics=Card_Details.topics
          no-update
        ]

    h1.my-5.ml-10.flex.w-fit.items-center.rounded.border-2.border-slate-400.p-4.text-left.text-2xl.font-semibold.shadow-lg.shadow-black
      internet_icon
      -- &nbsp;View More:

    section.flex.w-full.flex-wrap.justify-evenly
      infinite_scroll section="programs"

else
  div.relative
    <!-- Mobile toggle button -->
    button [
      type="button"
      onClick("toggleSidebar")
      class="fixed left-0 top-20 z-30 block rounded-r-lg bg-gray-800 p-2 text-white md:hidden"
    ]
      flowbite-filter-solid [
        stroke="currentColor"
        fill="currentColor"
        viewBox="0 0 24 24"
        height="24"
        width="24"
      ]
    <!-- Sidebar overlay -->
    div [
      class=`fixed inset-0 z-40 bg-black bg-opacity-50 transition-opacity md:hidden ${state.isSidebarOpen ? "opacity-100" : "opacity-0 pointer-events-none"}`
      onClick("toggleSidebar")
    ]
    <!-- Sidebar -->
    aside class=`fixed left-0 top-0 z-50 h-screen w-64 transform transition-transform md:translate-x-0 ${state.isSidebarOpen ? "translate-x-0" : "-translate-x-full"}`
      div class="h-full overflow-y-auto border-r border-gray-200 bg-white px-3 py-4 dark:border-gray-700 dark:bg-[#1e1e1e]"
        h2 class="mb-4 text-lg font-semibold text-gray-900 dark:text-white"
          -- Sort By

        div.flex.flex-col.space-y-2
          button [
            type="button"
            onClick("onSort", "intelligent_sort")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-brain-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Smart Sort

          button [
            type="button"
            onClick("onSort", "star_count_sort")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-star-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Most Stars

          button [
            type="button"
            onClick("onSort", "last_updated")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-clock-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Recently Updated

          button [
            type="button"
            onClick("onSort", "recently_created")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-calendar-plus-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Newly Added

          button [
            type="button"
            onClick("onSort", "oldest_first")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-clock-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Oldest First

          div class="my-2 border-t border-gray-200 dark:border-gray-700"

          button [
            type="button"
            onClick("onSort", "a_to_z")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-adjustments-horizontal-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- A to Z

          button [
            type="button"
            onClick("onSort", "z_to_a")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-adjustments-horizontal-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Z to A

          div class="my-2 border-t border-gray-200 dark:border-gray-700"

          button [
            type="button"
            onClick("onSort", "fork_sort")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-code-fork-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Most Forks

          button [
            type="button"
            onClick("onSort", "most_issues")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-exclamation-circle-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Most Issues

          button [
            type="button"
            onClick("onSort", "least_issues")
            class="flex items-center rounded-lg px-3 py-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
          ]
            flowbite-check-circle-solid.mr-3 [
              stroke="currentColor"
              fill="currentColor"
              viewBox="0 0 24 24"
              height="20"
              width="20"
            ]
            -- Least Issues
    <!-- Main content area -->
    div class="transition-all duration-300 md:ml-64"
      h1.my-5.ml-10.flex.w-fit.items-center.rounded.border-2.border-slate-400.p-4.text-left.text-2xl.font-semibold.shadow-lg.shadow-black
        internet_icon
        -- &nbsp;Search Results:
      section.flex.w-full.flex-wrap.justify-evenly
        if(state.searchResults.length !== 0)
          for|Card_Details| of=state.searchResults
            custom_card [
              section="programs"
              repo_from=Card_Details.repo_from
              avatar_url=Card_Details.avatar_url
              description=Card_Details.description
              name=Card_Details.name
              stargazers_count=Card_Details.stargazers_count
              forks_count=Card_Details.forks_count
              open_issues=Card_Details.open_issues
              fork=Card_Details.fork
              full_name=Card_Details.full_name
              has_build_zig=Card_Details.has_build_zig
              has_build_zig_zon=Card_Details.has_build_zig_zon
              license=Card_Details.license
              watchers_count=Card_Details.watchers_count
              topics=Card_Details.topics
              no-update
            ]
        else
          h1.text-4xl -- Can't find what you are looking for.

style {
  select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: none;
  }

  .sidebar-transition {
    transition: transform 0.3s ease-in-out;
  }

  @media (max-width: 768px) {
    .content-shift {
      transition: margin-left 0.3s ease-in-out;
    }
  }
}
